# NAME

Dist::Zilla::Plugin::Git::Remote::Check - Ensure no pending commits on a remote branch before release

# VERSION

version 0.1.3

# SYNOPSIS

    [Git::Remote::Check]
     ; Provided by Dist::Zilla::Role::Git::Remote
    ; String
    ; The name of the remote to update.
    ; Must exist in Git.
    ; default is 'origin'
    remote_name = origin

    ; Provided by Dist::Zilla::Role::Git::Remote::Update
    ; Boolean
    ; turn updating on/off
    ; default is 'on' ( 1 / true )
    do_update = 1

    ; Provided by Dist::Zilla::Role::Git::Remote::Branch
    ; String
    ; the name of the branch on the remote side to check against
    ; default is the same value us 'branch'
    remote_branch = master

    ; String
    ; the name of the branch on the local side to check.
    ; default is 'master'
    branch = master

    ; Provided by Dist::Zilla::Role::Git::Remote::Check;
    ; Int
    ; How many of the most recent commits to dump when we're behind upstream.
    ; default = 5
    report_commits = 5

# PARAMETERS

## `remote_name`

The name of the repository to use as specified in `.git/config`.

Defaults to `origin`, which is usually what you want.

## `do_update`

A boolean value that specifies whether or not to execute the update.

Default value is `1` / true.

## `branch`

The local branch to check against the remote one. Defaults to 'master'

## `report_commits`

In the event the remote is ahead, this `Int` dictates the maximum number of
commits to print to output.

Defaults to `5`

# METHODS

## `before_release`

Executes code before releasing.

1. Updates the ["remote"](#remote) via ["remote\_update" in Dist::Zilla::Role::Git::Remote::Update](http://search.cpan.org/perldoc?Dist::Zilla::Role::Git::Remote::Update#remote\_update)
2. Checks the ["remote"](#remote) via ["check\_remote" in Dist::Zilla::Role::Git::Remote::Check](http://search.cpan.org/perldoc?Dist::Zilla::Role::Git::Remote::Check#check\_remote)

## `remote`

Returns a validated remote name. Configured via ["remote\_name"](#remote\_name) parameter.

## `remote_update`

Performs `git remote update $remote_name` on ["git"](#git) for the remote ["remote"](#remote)

## `branch`

The local branch to check against the remote one. Defaults to 'master'

## `check_remote`

Compare ["branch"](#branch) and ["remote\_branch"](#remote\_branch) making sure that ["branch"](#branch) is the more
recent of the 2.

# ROLES

## `Dist::Zilla::Role::BeforeRelease`

Causes this plugin to be executed during [Dist::Zilla](http://search.cpan.org/perldoc?Dist::Zilla)'s "Before Re,ease" phase.
( ["before\_release"](#before\_release) )

## `Dist::Zilla::Role::Git::Remote`

Provides a ["remote"](#remote) method which always returns a validated `remote` name,
optionally accepting it being specified manually to something other than
`origin` via the parameter ["remote\_name"](#remote\_name)

## `Dist::Zilla::Role::Git::Remote::Update`

Provides a ["remote\_update"](#remote\_update) method which updates a ["remote"](#remote) in ["git"](#git)

## `Dist::Zilla::Role::Git::Remote::Check`

Provides ["check\_remote"](#check\_remote) which compares ["branch"](#branch) and ["remote\_branch"](#remote\_branch) and
asserts ["remote\_branch"](#remote\_branch) is not ahead of ["branch"](#branch)

# AUTHOR

Kent Fredric <kentnl@cpan.org>

# COPYRIGHT AND LICENSE

This software is copyright (c) 2013 by Kent Fredric <kentnl@cpan.org>.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

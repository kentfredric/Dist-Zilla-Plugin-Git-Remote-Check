# Dist::Zilla::Plugin::Git::Remote::Check
{
  accessors_as_hash => {
    inherited => {
      private => {
                   _has_remote_name => "Dist::Zilla::Role::Git::RemoteNames/attribute = remote_names => RemoteNames.pm line 11",
                   _remote_name     => "Dist::Zilla::Role::Git::RemoteName/attribute = _remote_name => RemoteName.pm line 56",
                 },
      public  => {
                   clear_local_branches => "Dist::Zilla::Role::Git::LocalRepository::LocalBranches/attribute = local_branches => LocalBranches.pm line 9",
                   do_update => "Dist::Zilla::Role::Git::Remote::Update/attribute = do_update => Update.pm line 48",
                   git => "Dist::Zilla::Role::Git::LocalRepository/attribute = git => LocalRepository.pm line 69",
                   has_local_branches => "Dist::Zilla::Role::Git::LocalRepository::LocalBranches/attribute = local_branches => LocalBranches.pm line 9",
                   local_branches => "Dist::Zilla::Role::Git::LocalRepository::LocalBranches/attribute = local_branches => LocalBranches.pm line 9",
                   log => "Dist::Zilla::Role::Plugin/attribute = logger => Plugin.pm line 40",
                   log_debug => "Dist::Zilla::Role::Plugin/attribute = logger => Plugin.pm line 40",
                   log_fatal => "Dist::Zilla::Role::Plugin/attribute = logger => Plugin.pm line 40",
                   logger => "Dist::Zilla::Role::Plugin/attribute = logger => Plugin.pm line 40",
                   plugin_name => "Dist::Zilla::Role::Plugin/attribute = plugin_name => Plugin.pm line 16",
                   remote_names => "Dist::Zilla::Role::Git::RemoteNames/attribute = remote_names => RemoteNames.pm line 11",
                   report_commits => "Dist::Zilla::Role::Git::Remote::Check/attribute = report_commits => Check.pm line 38",
                   skip_if_not_current => "Dist::Zilla::Role::Git::Remote::Check/attribute = skip_if_not_current => Check.pm line 67",
                   zilla => "Dist::Zilla::Role::Plugin/attribute = zilla => Plugin.pm line 23",
                 },
    },
    own => {
      private => {
                   _remote_branch => "attribute = _remote_branch => Check.pm line 154",
                 },
      public  => { branch => "attribute = branch => Check.pm line 131" },
    },
  },
  attributes_as_hash => {
    inherited => {
      private => {
                   _remote_name => "Dist::Zilla::Role::Git::RemoteName/_remote_name => RemoteName.pm line 56",
                 },
      public  => {
                   do_update => "Dist::Zilla::Role::Git::Remote::Update/do_update => Update.pm line 48",
                   git => "Dist::Zilla::Role::Git::LocalRepository/git => LocalRepository.pm line 69",
                   local_branches => "Dist::Zilla::Role::Git::LocalRepository::LocalBranches/local_branches => LocalBranches.pm line 9",
                   logger => "Dist::Zilla::Role::Plugin/logger => Plugin.pm line 40",
                   plugin_name => "Dist::Zilla::Role::Plugin/plugin_name => Plugin.pm line 16",
                   remote_names => "Dist::Zilla::Role::Git::RemoteNames/remote_names => RemoteNames.pm line 11",
                   report_commits => "Dist::Zilla::Role::Git::Remote::Check/report_commits => Check.pm line 38",
                   skip_if_not_current => "Dist::Zilla::Role::Git::Remote::Check/skip_if_not_current => Check.pm line 67",
                   zilla => "Dist::Zilla::Role::Plugin/zilla => Plugin.pm line 23",
                 },
    },
    own => {
      private => { _remote_branch => "Check.pm line 154" },
      public  => { branch => "Check.pm line 131" },
    },
  },
  classname => "Dist::Zilla::Plugin::Git::Remote::Check",
  composes => [
    "Dist::Zilla::Role::BeforeRelease",
    "Dist::Zilla::Role::ConfigDumper",
    "Dist::Zilla::Role::Git::LocalRepository",
    "Dist::Zilla::Role::Git::LocalRepository::CurrentBranch",
    "Dist::Zilla::Role::Git::LocalRepository::LocalBranches",
    "Dist::Zilla::Role::Git::Remote::Branch",
    "Dist::Zilla::Role::Git::Remote::Check",
    "Dist::Zilla::Role::Git::Remote::Update",
    "Dist::Zilla::Role::Git::RemoteName",
    "Dist::Zilla::Role::Git::RemoteNames",
    "Dist::Zilla::Role::Plugin",
  ],
  constructorargs_as_hash => {
    inherited => {
      public => {
        do_update           => "Dist::Zilla::Role::Git::Remote::Update/attribute = do_update => Update.pm line 48",
        local_branches      => "Dist::Zilla::Role::Git::LocalRepository::LocalBranches/attribute = local_branches => LocalBranches.pm line 9",
        logger              => "Dist::Zilla::Role::Plugin/attribute = logger => Plugin.pm line 40",
        plugin_name         => "Dist::Zilla::Role::Plugin/attribute = plugin_name => Plugin.pm line 16",
        remote_name         => "Dist::Zilla::Role::Git::RemoteName/attribute = _remote_name => RemoteName.pm line 56",
        report_commits      => "Dist::Zilla::Role::Git::Remote::Check/attribute = report_commits => Check.pm line 38",
        skip_if_not_current => "Dist::Zilla::Role::Git::Remote::Check/attribute = skip_if_not_current => Check.pm line 67",
        zilla               => "Dist::Zilla::Role::Plugin/attribute = zilla => Plugin.pm line 23",
      },
    },
    own => {
      public => {
        branch => "attribute = branch => Check.pm line 131",
        remote_branch => "attribute = _remote_branch => Check.pm line 154",
      },
    },
  },
  inherits => ["Moose::Object"],
  methods_as_hash => {
    own => {
             private => [
                          "_build_git",
                          "_build_local_branches",
                          "_build_remote_names",
                          "_current_sha1",
                          "_has_remote_name",
                          "_incomming_commits",
                          "_outgoing_commits",
                          "_remote_branch",
                          "_remote_name",
                        ],
             public  => [
                          "BUILDALL",
                          "BUILDARGS",
                          "DEMOLISHALL",
                          "DESTROY",
                          "DOES",
                          "VERSION",
                          "before_release",
                          "branch",
                          "can",
                          "check_remote",
                          "clear_local_branches",
                          "current_branch",
                          "do_update",
                          "does",
                          "dump",
                          "dump_config",
                          "get_valid_remote_name",
                          "git",
                          "has_local_branches",
                          "has_remote_name",
                          "is_current_branch",
                          "isa",
                          "local_branches",
                          "log",
                          "log_debug",
                          "log_fatal",
                          "logger",
                          "meta",
                          "mvp_aliases",
                          "mvp_multivalue_args",
                          "new",
                          "plugin_from_config",
                          "plugin_name",
                          "register_component",
                          "remote_branch",
                          "remote_name",
                          "remote_names",
                          "remote_update",
                          "report_commits",
                          "should_skip",
                          "skip_if_not_current",
                          "zilla",
                        ],
           },
  },
}
# Dist::Zilla::Plugin::Git::Remote::Check::BeforeBuild
{
  accessors_as_hash => {
    inherited => {
      private => {
                   _has_remote_name => "Dist::Zilla::Role::Git::RemoteNames/attribute = remote_names => RemoteNames.pm line 11",
                   _remote_name     => "Dist::Zilla::Role::Git::RemoteName/attribute = _remote_name => RemoteName.pm line 56",
                 },
      public  => {
                   clear_local_branches => "Dist::Zilla::Role::Git::LocalRepository::LocalBranches/attribute = local_branches => LocalBranches.pm line 9",
                   do_update => "Dist::Zilla::Role::Git::Remote::Update/attribute = do_update => Update.pm line 48",
                   git => "Dist::Zilla::Role::Git::LocalRepository/attribute = git => LocalRepository.pm line 69",
                   has_local_branches => "Dist::Zilla::Role::Git::LocalRepository::LocalBranches/attribute = local_branches => LocalBranches.pm line 9",
                   local_branches => "Dist::Zilla::Role::Git::LocalRepository::LocalBranches/attribute = local_branches => LocalBranches.pm line 9",
                   log => "Dist::Zilla::Role::Plugin/attribute = logger => Plugin.pm line 40",
                   log_debug => "Dist::Zilla::Role::Plugin/attribute = logger => Plugin.pm line 40",
                   log_fatal => "Dist::Zilla::Role::Plugin/attribute = logger => Plugin.pm line 40",
                   logger => "Dist::Zilla::Role::Plugin/attribute = logger => Plugin.pm line 40",
                   plugin_name => "Dist::Zilla::Role::Plugin/attribute = plugin_name => Plugin.pm line 16",
                   remote_names => "Dist::Zilla::Role::Git::RemoteNames/attribute = remote_names => RemoteNames.pm line 11",
                   report_commits => "Dist::Zilla::Role::Git::Remote::Check/attribute = report_commits => Check.pm line 38",
                   skip_if_not_current => "Dist::Zilla::Role::Git::Remote::Check/attribute = skip_if_not_current => Check.pm line 67",
                   zilla => "Dist::Zilla::Role::Plugin/attribute = zilla => Plugin.pm line 23",
                 },
    },
    own => {
      private => {
                   _remote_branch => "attribute = _remote_branch => BeforeBuild.pm line 178",
                 },
      public  => { branch => "attribute = branch => BeforeBuild.pm line 155" },
    },
  },
  attributes_as_hash => {
    inherited => {
      private => {
                   _remote_name => "Dist::Zilla::Role::Git::RemoteName/_remote_name => RemoteName.pm line 56",
                 },
      public  => {
                   do_update => "Dist::Zilla::Role::Git::Remote::Update/do_update => Update.pm line 48",
                   git => "Dist::Zilla::Role::Git::LocalRepository/git => LocalRepository.pm line 69",
                   local_branches => "Dist::Zilla::Role::Git::LocalRepository::LocalBranches/local_branches => LocalBranches.pm line 9",
                   logger => "Dist::Zilla::Role::Plugin/logger => Plugin.pm line 40",
                   plugin_name => "Dist::Zilla::Role::Plugin/plugin_name => Plugin.pm line 16",
                   remote_names => "Dist::Zilla::Role::Git::RemoteNames/remote_names => RemoteNames.pm line 11",
                   report_commits => "Dist::Zilla::Role::Git::Remote::Check/report_commits => Check.pm line 38",
                   skip_if_not_current => "Dist::Zilla::Role::Git::Remote::Check/skip_if_not_current => Check.pm line 67",
                   zilla => "Dist::Zilla::Role::Plugin/zilla => Plugin.pm line 23",
                 },
    },
    own => {
      private => { _remote_branch => "BeforeBuild.pm line 178" },
      public  => { branch => "BeforeBuild.pm line 155" },
    },
  },
  classname => "Dist::Zilla::Plugin::Git::Remote::Check::BeforeBuild",
  composes => [
    "Dist::Zilla::Role::BeforeBuild",
    "Dist::Zilla::Role::ConfigDumper",
    "Dist::Zilla::Role::Git::LocalRepository",
    "Dist::Zilla::Role::Git::LocalRepository::CurrentBranch",
    "Dist::Zilla::Role::Git::LocalRepository::LocalBranches",
    "Dist::Zilla::Role::Git::Remote::Branch",
    "Dist::Zilla::Role::Git::Remote::Check",
    "Dist::Zilla::Role::Git::Remote::Update",
    "Dist::Zilla::Role::Git::RemoteName",
    "Dist::Zilla::Role::Git::RemoteNames",
    "Dist::Zilla::Role::Plugin",
  ],
  constructorargs_as_hash => {
    inherited => {
      public => {
        do_update           => "Dist::Zilla::Role::Git::Remote::Update/attribute = do_update => Update.pm line 48",
        local_branches      => "Dist::Zilla::Role::Git::LocalRepository::LocalBranches/attribute = local_branches => LocalBranches.pm line 9",
        logger              => "Dist::Zilla::Role::Plugin/attribute = logger => Plugin.pm line 40",
        plugin_name         => "Dist::Zilla::Role::Plugin/attribute = plugin_name => Plugin.pm line 16",
        remote_name         => "Dist::Zilla::Role::Git::RemoteName/attribute = _remote_name => RemoteName.pm line 56",
        report_commits      => "Dist::Zilla::Role::Git::Remote::Check/attribute = report_commits => Check.pm line 38",
        skip_if_not_current => "Dist::Zilla::Role::Git::Remote::Check/attribute = skip_if_not_current => Check.pm line 67",
        zilla               => "Dist::Zilla::Role::Plugin/attribute = zilla => Plugin.pm line 23",
      },
    },
    own => {
      public => {
        branch => "attribute = branch => BeforeBuild.pm line 155",
        remote_branch => "attribute = _remote_branch => BeforeBuild.pm line 178",
      },
    },
  },
  inherits => ["Moose::Object"],
  methods_as_hash => {
    own => {
             private => [
                          "_build_git",
                          "_build_local_branches",
                          "_build_remote_names",
                          "_current_sha1",
                          "_has_remote_name",
                          "_incomming_commits",
                          "_outgoing_commits",
                          "_remote_branch",
                          "_remote_name",
                        ],
             public  => [
                          "BUILDALL",
                          "BUILDARGS",
                          "DEMOLISHALL",
                          "DESTROY",
                          "DOES",
                          "VERSION",
                          "before_build",
                          "branch",
                          "can",
                          "check_remote",
                          "clear_local_branches",
                          "current_branch",
                          "do_update",
                          "does",
                          "dump",
                          "dump_config",
                          "get_valid_remote_name",
                          "git",
                          "has_local_branches",
                          "has_remote_name",
                          "is_current_branch",
                          "isa",
                          "local_branches",
                          "log",
                          "log_debug",
                          "log_fatal",
                          "logger",
                          "meta",
                          "mvp_aliases",
                          "mvp_multivalue_args",
                          "new",
                          "plugin_from_config",
                          "plugin_name",
                          "register_component",
                          "remote_branch",
                          "remote_name",
                          "remote_names",
                          "remote_update",
                          "report_commits",
                          "should_skip",
                          "skip_if_not_current",
                          "zilla",
                        ],
           },
  },
}
# Dist::Zilla::Plugin::Git::Remote::Update
{
  accessors_as_hash => {
    inherited => {
      private => {
                   _has_remote_name => "Dist::Zilla::Role::Git::RemoteNames/attribute = remote_names => RemoteNames.pm line 11",
                   _remote_name     => "Dist::Zilla::Role::Git::RemoteName/attribute = _remote_name => RemoteName.pm line 56",
                 },
      public  => {
                   do_update => "Dist::Zilla::Role::Git::Remote::Update/attribute = do_update => Update.pm line 48",
                   git => "Dist::Zilla::Role::Git::LocalRepository/attribute = git => LocalRepository.pm line 69",
                   log => "Dist::Zilla::Role::Plugin/attribute = logger => Plugin.pm line 40",
                   log_debug => "Dist::Zilla::Role::Plugin/attribute = logger => Plugin.pm line 40",
                   log_fatal => "Dist::Zilla::Role::Plugin/attribute = logger => Plugin.pm line 40",
                   logger => "Dist::Zilla::Role::Plugin/attribute = logger => Plugin.pm line 40",
                   plugin_name => "Dist::Zilla::Role::Plugin/attribute = plugin_name => Plugin.pm line 16",
                   remote_names => "Dist::Zilla::Role::Git::RemoteNames/attribute = remote_names => RemoteNames.pm line 11",
                   zilla => "Dist::Zilla::Role::Plugin/attribute = zilla => Plugin.pm line 23",
                 },
    },
  },
  attributes_as_hash => {
    inherited => {
      private => {
                   _remote_name => "Dist::Zilla::Role::Git::RemoteName/_remote_name => RemoteName.pm line 56",
                 },
      public  => {
                   do_update => "Dist::Zilla::Role::Git::Remote::Update/do_update => Update.pm line 48",
                   git => "Dist::Zilla::Role::Git::LocalRepository/git => LocalRepository.pm line 69",
                   logger => "Dist::Zilla::Role::Plugin/logger => Plugin.pm line 40",
                   plugin_name => "Dist::Zilla::Role::Plugin/plugin_name => Plugin.pm line 16",
                   remote_names => "Dist::Zilla::Role::Git::RemoteNames/remote_names => RemoteNames.pm line 11",
                   zilla => "Dist::Zilla::Role::Plugin/zilla => Plugin.pm line 23",
                 },
    },
  },
  classname => "Dist::Zilla::Plugin::Git::Remote::Update",
  composes => [
    "Dist::Zilla::Role::BeforeRelease",
    "Dist::Zilla::Role::ConfigDumper",
    "Dist::Zilla::Role::Git::LocalRepository",
    "Dist::Zilla::Role::Git::Remote::Update",
    "Dist::Zilla::Role::Git::RemoteName",
    "Dist::Zilla::Role::Git::RemoteNames",
    "Dist::Zilla::Role::Plugin",
  ],
  constructorargs_as_hash => {
    inherited => {
      public => {
        do_update => "Dist::Zilla::Role::Git::Remote::Update/attribute = do_update => Update.pm line 48",
        logger => "Dist::Zilla::Role::Plugin/attribute = logger => Plugin.pm line 40",
        plugin_name => "Dist::Zilla::Role::Plugin/attribute = plugin_name => Plugin.pm line 16",
        remote_name => "Dist::Zilla::Role::Git::RemoteName/attribute = _remote_name => RemoteName.pm line 56",
        zilla => "Dist::Zilla::Role::Plugin/attribute = zilla => Plugin.pm line 23",
      },
    },
  },
  inherits => ["Moose::Object"],
  methods_as_hash => {
    own => {
             private => [
                          "_build_git",
                          "_build_remote_names",
                          "_has_remote_name",
                          "_remote_name",
                        ],
             public  => [
                          "BUILDALL",
                          "BUILDARGS",
                          "DEMOLISHALL",
                          "DESTROY",
                          "DOES",
                          "VERSION",
                          "before_release",
                          "can",
                          "do_update",
                          "does",
                          "dump",
                          "dump_config",
                          "get_valid_remote_name",
                          "git",
                          "has_remote_name",
                          "isa",
                          "log",
                          "log_debug",
                          "log_fatal",
                          "logger",
                          "meta",
                          "mvp_aliases",
                          "mvp_multivalue_args",
                          "new",
                          "plugin_from_config",
                          "plugin_name",
                          "register_component",
                          "remote_name",
                          "remote_names",
                          "remote_update",
                          "zilla",
                        ],
           },
  },
}
# Dist::Zilla::Plugin::Git::Remote::Update::BeforeBuild
{
  accessors_as_hash => {
    inherited => {
      private => {
                   _has_remote_name => "Dist::Zilla::Role::Git::RemoteNames/attribute = remote_names => RemoteNames.pm line 11",
                   _remote_name     => "Dist::Zilla::Role::Git::RemoteName/attribute = _remote_name => RemoteName.pm line 56",
                 },
      public  => {
                   do_update => "Dist::Zilla::Role::Git::Remote::Update/attribute = do_update => Update.pm line 48",
                   git => "Dist::Zilla::Role::Git::LocalRepository/attribute = git => LocalRepository.pm line 69",
                   log => "Dist::Zilla::Role::Plugin/attribute = logger => Plugin.pm line 40",
                   log_debug => "Dist::Zilla::Role::Plugin/attribute = logger => Plugin.pm line 40",
                   log_fatal => "Dist::Zilla::Role::Plugin/attribute = logger => Plugin.pm line 40",
                   logger => "Dist::Zilla::Role::Plugin/attribute = logger => Plugin.pm line 40",
                   plugin_name => "Dist::Zilla::Role::Plugin/attribute = plugin_name => Plugin.pm line 16",
                   remote_names => "Dist::Zilla::Role::Git::RemoteNames/attribute = remote_names => RemoteNames.pm line 11",
                   zilla => "Dist::Zilla::Role::Plugin/attribute = zilla => Plugin.pm line 23",
                 },
    },
  },
  attributes_as_hash => {
    inherited => {
      private => {
                   _remote_name => "Dist::Zilla::Role::Git::RemoteName/_remote_name => RemoteName.pm line 56",
                 },
      public  => {
                   do_update => "Dist::Zilla::Role::Git::Remote::Update/do_update => Update.pm line 48",
                   git => "Dist::Zilla::Role::Git::LocalRepository/git => LocalRepository.pm line 69",
                   logger => "Dist::Zilla::Role::Plugin/logger => Plugin.pm line 40",
                   plugin_name => "Dist::Zilla::Role::Plugin/plugin_name => Plugin.pm line 16",
                   remote_names => "Dist::Zilla::Role::Git::RemoteNames/remote_names => RemoteNames.pm line 11",
                   zilla => "Dist::Zilla::Role::Plugin/zilla => Plugin.pm line 23",
                 },
    },
  },
  classname => "Dist::Zilla::Plugin::Git::Remote::Update::BeforeBuild",
  composes => [
    "Dist::Zilla::Role::BeforeBuild",
    "Dist::Zilla::Role::ConfigDumper",
    "Dist::Zilla::Role::Git::LocalRepository",
    "Dist::Zilla::Role::Git::Remote::Update",
    "Dist::Zilla::Role::Git::RemoteName",
    "Dist::Zilla::Role::Git::RemoteNames",
    "Dist::Zilla::Role::Plugin",
  ],
  constructorargs_as_hash => {
    inherited => {
      public => {
        do_update => "Dist::Zilla::Role::Git::Remote::Update/attribute = do_update => Update.pm line 48",
        logger => "Dist::Zilla::Role::Plugin/attribute = logger => Plugin.pm line 40",
        plugin_name => "Dist::Zilla::Role::Plugin/attribute = plugin_name => Plugin.pm line 16",
        remote_name => "Dist::Zilla::Role::Git::RemoteName/attribute = _remote_name => RemoteName.pm line 56",
        zilla => "Dist::Zilla::Role::Plugin/attribute = zilla => Plugin.pm line 23",
      },
    },
  },
  inherits => ["Moose::Object"],
  methods_as_hash => {
    own => {
             private => [
                          "_build_git",
                          "_build_remote_names",
                          "_has_remote_name",
                          "_remote_name",
                        ],
             public  => [
                          "BUILDALL",
                          "BUILDARGS",
                          "DEMOLISHALL",
                          "DESTROY",
                          "DOES",
                          "VERSION",
                          "before_build",
                          "can",
                          "do_update",
                          "does",
                          "dump",
                          "dump_config",
                          "get_valid_remote_name",
                          "git",
                          "has_remote_name",
                          "isa",
                          "log",
                          "log_debug",
                          "log_fatal",
                          "logger",
                          "meta",
                          "mvp_aliases",
                          "mvp_multivalue_args",
                          "new",
                          "plugin_from_config",
                          "plugin_name",
                          "register_component",
                          "remote_name",
                          "remote_names",
                          "remote_update",
                          "zilla",
                        ],
           },
  },
}
# Dist::Zilla::Role::BeforeBuild
{
  attributes_as_hash => {
                          inherited => {
                            public => {
                              logger => "Dist::Zilla::Role::Plugin/logger => Plugin.pm line 40",
                              plugin_name => "Dist::Zilla::Role::Plugin/plugin_name => Plugin.pm line 16",
                              zilla => "Dist::Zilla::Role::Plugin/zilla => Plugin.pm line 23",
                            },
                          },
                        },
  classname          => "Dist::Zilla::Role::BeforeBuild",
  composes           => ["Dist::Zilla::Role::Plugin"],
  methods_as_hash    => { own => { public => ["logger", "plugin_name", "zilla"] } },
  requires_as_hash   => { own => { public => ["before_build"] } },
}
# Dist::Zilla::Role::BeforeRelease
{
  attributes_as_hash => {
                          inherited => {
                            public => {
                              logger => "Dist::Zilla::Role::Plugin/logger => Plugin.pm line 40",
                              plugin_name => "Dist::Zilla::Role::Plugin/plugin_name => Plugin.pm line 16",
                              zilla => "Dist::Zilla::Role::Plugin/zilla => Plugin.pm line 23",
                            },
                          },
                        },
  classname          => "Dist::Zilla::Role::BeforeRelease",
  composes           => ["Dist::Zilla::Role::Plugin"],
  methods_as_hash    => { own => { public => ["logger", "plugin_name", "zilla"] } },
  requires_as_hash   => { own => { public => ["before_release"] } },
}
# Dist::Zilla::Role::ConfigDumper
{ classname => "Dist::Zilla::Role::ConfigDumper" }
# Dist::Zilla::Role::Git::LocalRepository
{
  attributes_as_hash => { own => { public => { git => "LocalRepository.pm line 69" } } },
  classname          => "Dist::Zilla::Role::Git::LocalRepository",
  methods_as_hash    => { own => { public => ["git"] } },
  requires_as_hash   => { own => { public => ["zilla"] } },
}
# Dist::Zilla::Role::Git::LocalRepository::CurrentBranch
{
  attributes_as_hash => {
                          inherited => {
                            public => {
                              local_branches => "Dist::Zilla::Role::Git::LocalRepository::LocalBranches/local_branches => LocalBranches.pm line 9",
                            },
                          },
                        },
  classname          => "Dist::Zilla::Role::Git::LocalRepository::CurrentBranch",
  composes           => ["Dist::Zilla::Role::Git::LocalRepository::LocalBranches"],
  methods_as_hash    => { own => { public => ["local_branches"] } },
  requires_as_hash   => { own => { public => ["git"] } },
}
# Dist::Zilla::Role::Git::LocalRepository::LocalBranches
{
  attributes_as_hash => {
                          own => { public => { local_branches => "LocalBranches.pm line 9" } },
                        },
  classname          => "Dist::Zilla::Role::Git::LocalRepository::LocalBranches",
  methods_as_hash    => { own => { public => ["local_branches"] } },
  requires_as_hash   => { own => { public => ["git"] } },
}
# Dist::Zilla::Role::Git::Remote::Branch
{
  attributes_as_hash      => {
                               inherited => {
                                 private => {
                                              _remote_name => "Dist::Zilla::Role::Git::RemoteName/_remote_name => RemoteName.pm line 56",
                                            },
                                 public  => {
                                              git => "Dist::Zilla::Role::Git::LocalRepository/git => LocalRepository.pm line 69",
                                              remote_names => "Dist::Zilla::Role::Git::RemoteNames/remote_names => RemoteNames.pm line 11",
                                            },
                               },
                               own => { private => { _remote_branch => "Branch.pm line 22" } },
                             },
  classname               => "Dist::Zilla::Role::Git::Remote::Branch",
  composes                => ["Dist::Zilla::Role::Git::RemoteName"],
  constructorargs_as_hash => {
                               inherited => {
                                 public => {
                                   remote_name => "Dist::Zilla::Role::Git::RemoteName/attribute = _remote_name => RemoteName.pm line 56",
                                 },
                               },
                               own => {
                                 public => {
                                   remote_branch => "attribute = _remote_branch => Branch.pm line 22",
                                 },
                               },
                             },
  methods_as_hash         => {
                               own => {
                                        private => ["_remote_branch", "_remote_name"],
                                        public  => ["git", "remote_names"],
                                      },
                             },
  requires_as_hash        => { own => { public => ["zilla", "log_fatal"] } },
}
# Dist::Zilla::Role::Git::Remote::Check
{
  attributes_as_hash      => {
                               inherited => {
                                 private => {
                                              _remote_branch => "Dist::Zilla::Role::Git::Remote::Branch/_remote_branch => Branch.pm line 22",
                                              _remote_name   => "Dist::Zilla::Role::Git::RemoteName/_remote_name => RemoteName.pm line 56",
                                            },
                                 public  => {
                                              git => "Dist::Zilla::Role::Git::LocalRepository/git => LocalRepository.pm line 69",
                                              remote_names => "Dist::Zilla::Role::Git::RemoteNames/remote_names => RemoteNames.pm line 11",
                                            },
                               },
                               own => {
                                 public => {
                                   report_commits      => "Check.pm line 38",
                                   skip_if_not_current => "Check.pm line 67",
                                 },
                               },
                             },
  classname               => "Dist::Zilla::Role::Git::Remote::Check",
  composes                => ["Dist::Zilla::Role::Git::Remote::Branch"],
  constructorargs_as_hash => {
                               inherited => {
                                 public => {
                                   remote_branch => "Dist::Zilla::Role::Git::Remote::Branch/attribute = _remote_branch => Branch.pm line 22",
                                   remote_name   => "Dist::Zilla::Role::Git::RemoteName/attribute = _remote_name => RemoteName.pm line 56",
                                 },
                               },
                             },
  methods_as_hash         => {
                               own => {
                                        private => ["_remote_branch", "_remote_name"],
                                        public  => ["git", "remote_names", "report_commits", "skip_if_not_current"],
                                      },
                             },
  requires_as_hash        => { own => { public => ["branch", "zilla", "log_fatal"] } },
}
# Dist::Zilla::Role::Git::Remote::Update
{
  attributes_as_hash      => {
                               inherited => {
                                 private => {
                                              _remote_name => "Dist::Zilla::Role::Git::RemoteName/_remote_name => RemoteName.pm line 56",
                                            },
                                 public  => {
                                              git => "Dist::Zilla::Role::Git::LocalRepository/git => LocalRepository.pm line 69",
                                              remote_names => "Dist::Zilla::Role::Git::RemoteNames/remote_names => RemoteNames.pm line 11",
                                            },
                               },
                               own => { public => { do_update => "Update.pm line 48" } },
                             },
  classname               => "Dist::Zilla::Role::Git::Remote::Update",
  composes                => ["Dist::Zilla::Role::Git::RemoteName"],
  constructorargs_as_hash => {
                               inherited => {
                                 public => {
                                   remote_name => "Dist::Zilla::Role::Git::RemoteName/attribute = _remote_name => RemoteName.pm line 56",
                                 },
                               },
                             },
  methods_as_hash         => {
                               own => {
                                        private => ["_remote_name"],
                                        public  => ["do_update", "git", "remote_names"],
                                      },
                             },
  requires_as_hash        => { own => { public => ["log", "zilla", "log_fatal"] } },
}
# Dist::Zilla::Role::Git::RemoteName
{
  attributes_as_hash      => {
                               inherited => {
                                 public => {
                                   git => "Dist::Zilla::Role::Git::LocalRepository/git => LocalRepository.pm line 69",
                                   remote_names => "Dist::Zilla::Role::Git::RemoteNames/remote_names => RemoteNames.pm line 11",
                                 },
                               },
                               own => { private => { _remote_name => "RemoteName.pm line 56" } },
                             },
  classname               => "Dist::Zilla::Role::Git::RemoteName",
  composes                => ["Dist::Zilla::Role::Git::RemoteNames"],
  constructorargs_as_hash => {
                               own => {
                                        public => {
                                          remote_name => "attribute = _remote_name => RemoteName.pm line 56",
                                        },
                                      },
                             },
  methods_as_hash         => {
                               own => { private => ["_remote_name"], public => ["git", "remote_names"] },
                             },
  requires_as_hash        => { own => { public => ["log_fatal", "zilla"] } },
}
# Dist::Zilla::Role::Git::RemoteNames
{
  attributes_as_hash => {
                          inherited => {
                            public => {
                              git => "Dist::Zilla::Role::Git::LocalRepository/git => LocalRepository.pm line 69",
                            },
                          },
                          own => { public => { remote_names => "RemoteNames.pm line 11" } },
                        },
  classname          => "Dist::Zilla::Role::Git::RemoteNames",
  composes           => ["Dist::Zilla::Role::Git::LocalRepository"],
  methods_as_hash    => { own => { public => ["git", "remote_names"] } },
  requires_as_hash   => { own => { public => ["zilla"] } },
}
# Dist::Zilla::Role::Plugin
{
  attributes_as_hash => {
    own => {
             public => {
               logger => "Plugin.pm line 40",
               plugin_name => "Plugin.pm line 16",
               zilla => "Plugin.pm line 23",
             },
           },
  },
  classname => "Dist::Zilla::Role::Plugin",
  composes => ["Dist::Zilla::Role::ConfigDumper"],
  methods_as_hash => { own => { public => ["logger", "plugin_name", "zilla"] } },
}
# Moose::Object
{
  classname => "Moose::Object",
  methods_as_hash => {
    own => {
             public => [
               "BUILDALL",
               "BUILDARGS",
               "DEMOLISHALL",
               "DESTROY",
               "DOES",
               "VERSION",
               "can",
               "does",
               "dump",
               "isa",
               "meta",
               "new",
             ],
           },
  },
}
